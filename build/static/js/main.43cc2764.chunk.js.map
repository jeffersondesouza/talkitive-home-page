{"version":3,"sources":["utils/Enums.js","config/config-axios.js","store/stores/auth/actions.js","store/stores/auth/reducers.js","store/stores/index.js","store/configureStore.js","utils/LocalStorageManager.js","utils/RouterRedirector.js","components/layout/Footer/Footer.js","components/layout/PublicHeader/PublicHeader.js","utils/EmailPatterValidation.js","components/forms/SignupForm/SignupForm.js","store/api/auth-api.js","utils/ServerErrorCatcher.js","store/stores/auth/middleware.js","pages/SignupPage/SignupPage.js","components/forms/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","pages/WelcomePage/WelcomePage.js","App.js","serviceWorker.js","index.js","assets/img/talktive.png"],"names":["Enums","axios","defaults","baseURL","AuthActions","email","_ref","password","type","LOGIN_REQUEST","payload","user","LOGIN_SUCCESS","error","LOGIN_FAILURE","_ref2","confirmPassword","SIGNUP_LOGIN_REQUEST","SIGNUP_LOGIN_SUCCESS","SIGNUP_LOGIN_FAILURE","INITIAL_STATE","isLoggin","isSignigUp","token","AuthReducer","state","arguments","length","undefined","action","Object","objectSpread","rootReducer","combineReducers","auth","authReducer","configure","history","initialState","createStore","reducer","compose","applyMiddleware","thunk","setUserToken","userToken","localStorage","setItem","JSON","stringify","redirectToWelcomePage","browserHistory","push","concat","verifyAuthetication","nextState","replace","getItem","Footer","react_default","a","createElement","className","src","talktiveLogo","alt","href","Component","PublicHeader","this","props","children","validateEmail","test","SignupForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","invalidEmailMsg","validEmail","requiredEmailMsg","inputValue","handleLogin","e","preventDefault","setState","emailError","passwordError","onLogin","onChangeEmail","target","value","onChangePassword","onChangeConfirmPassword","confirmPasswordError","handleSignUp","onSignup","renderBtnSubmit","_this2","onSubmit","onChange","placeholder","auth_api","post","name","ServerErrorCatcher","response","data","errors","AuthMiddleware","dispatch","loginRequest","authAPI","then","res","loginSuccess","catch","loginFailure","signUpRequest","signUpSuccess","signUpFailure","SignupPage","signUp","authState","context","store","getState","PublicHeader_PublicHeader","SignupForm_SignupForm","Footer_Footer","contextTypes","PropTypes","object","isRequired","SignupPageContainer","connect","LoginForm","noValidate","LoginPage","login","LoginForm_LoginForm","LoginPageContainer","WelcomePage","App","react_router_es","path","component","onEnter","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.43cc2764.chunk.js","sourcesContent":["export default {\n  APP_USER_TOKEN: 'APP_USER_TOKEN',\n  WELCOME_PAGE_PATH: 'pagina-inicial',\n  API_BASE_URL: 'https://api.dev.talkative.media/v1'\n\n}","import axios from 'axios';\nimport Enums from '../utils/Enums';\n\nconst configure = () => axios.defaults.baseURL = Enums.API_BASE_URL;\n\nexport default configure();\n","export default class AuthActions {\n  static LOGIN_REQUEST = 'auth:LOGIN_REQUEST';\n  static LOGIN_SUCCESS = 'auth:LOGIN_SUCCESS';\n  static LOGIN_FAILURE = 'auth:LOGIN_FAILURE';\n\n  static SIGNUP_LOGIN_REQUEST = 'auth:SIGNUP_LOGIN_REQUEST';\n  static SIGNUP_LOGIN_SUCCESS = 'auth:SIGNUP_LOGIN_SUCCESS';\n  static SIGNUP_LOGIN_FAILURE = 'auth:SIGNUP_LOGIN_FAILURE';\n\n  static loginRequest({ email, password }) {\n    return {\n      type: AuthActions.LOGIN_REQUEST,\n      payload: { email, password }\n    }\n  }\n\n  static loginSuccess(user) {\n    return {\n      type: AuthActions.LOGIN_SUCCESS,\n      payload: user\n    }\n  }\n\n  static loginFailure(error) {\n    return {\n      type: AuthActions.LOGIN_FAILURE,\n      payload: error\n    }\n  }\n\n  static signUpRequest({ email, password, confirmPassword }) {\n    return {\n      type: AuthActions.SIGNUP_LOGIN_REQUEST,\n      payload: { email, password, confirmPassword }\n    }\n  }\n\n  static signUpSuccess(user) {\n    return {\n      type: AuthActions.SIGNUP_LOGIN_SUCCESS,\n      payload: user\n    }\n  }\n\n  static signUpFailure(error) {\n    return {\n      type: AuthActions.SIGNUP_LOGIN_FAILURE,\n      payload: error\n    }\n  }\n\n}\n","import AuthActions from './actions';\r\n\r\nexport const INITIAL_STATE = {\r\n  isLoggin: false,\r\n  isSignigUp: false,\r\n  token: '',\r\n  user: null,\r\n}\r\n\r\nfunction AuthReducer(state = INITIAL_STATE, action) {\r\n\r\n  switch (action.type) {\r\n    case AuthActions.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggin: true,\r\n        user: INITIAL_STATE.user,\r\n      }\r\n    case AuthActions.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggin: false,\r\n        user: { ...action.payload },\r\n        error: null\r\n      }\r\n    case AuthActions.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggin: false,\r\n        error: action.payload\r\n      }\r\n    case AuthActions.SIGNUP_LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isSignigUp: true,\r\n        user: INITIAL_STATE.user,\r\n      }\r\n    case AuthActions.SIGNUP_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isSignigUp: false,\r\n        user: { ...action.payload },\r\n        error: null\r\n      }\r\n    case AuthActions.SIGNUP_LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isSignigUp: false,\r\n        error: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default AuthReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from './auth/reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from './stores/index';\r\n\r\nexport const configure = (history, initialState = {}) => (\r\n  createStore(\r\n    reducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(thunk),\r\n    )\r\n  )\r\n);\r\n\r\nexport default configure();\r\n","import Enums from \"./Enums\";\n\nexport const getUserToken = () => localStorage.getItem(Enums.APP_USER_TOKEN);\n\nexport const setUserToken = (userToken) =>\n  localStorage.setItem(Enums.APP_USER_TOKEN, JSON.stringify(userToken));\n\nexport const removeUserToken = () => {\n  if (typeof localStorage[Enums.APP_USER_TOKEN] !== 'undefined') {\n    localStorage.removeItem(Enums.APP_USER_TOKEN);\n  }\n}\n\n","import { browserHistory } from 'react-router';\nimport Enums from \"./Enums\";\nimport { getUserToken } from './LocalStorageManager';\n\n\nexport const redirectToWelcomePage = () => browserHistory.push(`/${Enums.WELCOME_PAGE_PATH}`);;\n\nexport const verifyAuthetication = (nextState, replace) => {\n  if (getUserToken() === null) {\n    replace('/login');\n  }\n}","import React, { Component } from 'react';\nimport './footer.css';\n\nimport talktiveLogo from './../../../assets/img/talktive.png';\n\n\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"footer__logo-block\">\n          <div className=\"footer__logo\">\n            <img className=\"img-responsive\" src={talktiveLogo} alt=\"Logomarca da talktive\" />\n          </div>\n          <div className=\"footer__copyrights\">R Mobify é uma ferramenta Talktive by Wololo Tech</div>\n        </div>\n        <div className=\"footer__nav-block\">\n          <nav className=\"footer__nav\">\n            <a className=\"footer__nav-link\" href=\"#\">Enviar Feedback</a>\n            <span className=\"bullet-separator\">&#8226;</span>\n            <a className=\"footer__nav-link\" href=\"#\">Sobe Nós</a>\n            <span className=\"bullet-separator\">&#8226;</span>\n            <a className=\"footer__nav-link\" href=\"#\">Fale Conosco</a>\n          </nav>\n        </div>\n      </footer>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './public-header.css';\n\nexport default class PublicHeader extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <div className=\"header__title-block\">\n          <h1 className=\"header__title\">Sua voz será ouvida e recompensada</h1>\n        </div>\n        <div className=\"header__form-block\">\n          {this.props.children}\n        </div>\n        <div className=\"header__call\">\n          Você foi convidado a participar da mais inovadora ferramenta de mídia para micro-influenciadores nas redes\n          sociais.\n      </div>\n      </header>\n    )\n  }\n}\n","export const validateEmail = (email) => {\n  const regex = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n  return regex.test(email);\n}\n\n\n","import React, { Component } from 'react';\nimport { validateEmail } from '../../../utils/EmailPatterValidation';\n\nexport default class SignupForm extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      emailError: '',\n      passwordError: '',\n      confirmPasswordError: '',\n    }\n  }\n\n  invalidEmailMsg = (validEmail) => validEmail\n    ? ''\n    : 'Por favor informe um email válido (Ex: meuemail@email.com)';\n\n  requiredEmailMsg = (inputValue) => (inputValue !== null)\n    ? null\n    : 'Por favor, informe seu email';\n\n  handleLogin = (e) => {\n    e.preventDefault();\n\n    if (!this.state.email) {\n      this.setState({\n        emailError: 'Por favor informe seu email'\n      });\n    }\n\n    if (!this.state.password) {\n      this.setState({\n        passwordError: 'Por favor informe um password'\n      });\n    }\n\n    if (!this.state.emailError && !this.state.passwordError) {\n      this.props.onLogin({\n        email: this.state.email,\n        password: this.state.password,\n        emailError: '',\n        passwordError: ''\n      });\n    }\n\n  }\n\n  onChangeEmail = (e) => {\n    const validEmail = validateEmail(e.target.value);\n\n    this.setState({\n      email: e.target.value,\n      emailError: this.invalidEmailMsg(validEmail)\n    });\n  }\n\n  onChangePassword = (e) => {\n    this.setState({\n      password: e.target.value,\n      passwordError: (e.target.value !== null) ? '' : 'Por favor informe uma senha'\n    });\n  }\n\n  onChangeConfirmPassword = (e) => {\n    this.setState({\n      confirmPassword: e.target.value,\n      confirmPasswordError: (e.target.value !== null) ? '' : 'Por favor confirme sua senha'\n    });\n  }\n\n  handleSignUp = (e) => {\n    e.preventDefault();\n\n    if (!this.state.email) {\n      this.setState({\n        emailError: 'Por favor informe seu email'\n      });\n    }\n\n    if (!this.state.password) {\n      this.setState({\n        passwordError: 'Por favor informe sua senha'\n      });\n    }\n\n    if (!this.state.confirmPassword) {\n      this.setState({\n        confirmPasswordError: 'Por favor confirme sua senha'\n      });\n    }\n\n    if (this.state.confirmPassword && this.state.password && (this.state.confirmPassword !== this.state.password)) {\n      this.setState({\n        confirmPasswordError: 'O valor de confirmação deve ser igual a senha informada'\n      });\n    }\n\n    if (!this.state.emailError && !this.state.passwordError && !this.state.confirmPasswordError) {\n      e.preventDefault();\n      this.props.onSignup({\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n      });\n    }\n  }\n\n  renderBtnSubmit = () => (\n    (this.props.isSignigUp)\n      ? <span>Criando...</span>\n      : <span>Criar Conta</span>\n  );\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSignUp} className=\"form__header\">\n        <h2 className=\"form__header-title\">Para validar seu convite é preciso cadastrar os seguintes dados:</h2>\n        <div className=\"form__group form-error\">\n          {this.props.error}\n        </div>\n        <div className=\"form__group\">\n          <input\n            value={this.state.email}\n            onChange={e => this.onChangeEmail(e)}\n            className=\"form__input\" type=\"email\"\n            placeholder=\"Digite seu emaill\" />\n          <p className=\"form-error\">{this.state.emailError}</p>\n        </div>\n        <div className=\"form__group\">\n          <input\n            value={this.state.password}\n            onChange={e => this.onChangePassword(e)}\n            className=\"form__input\"\n            type=\"password\"\n            placeholder=\"Escolha Sua senha\" />\n          <p className=\"form-error\">{this.state.passwordError}</p>\n        </div>\n        <div className=\"form__group\">\n          <input\n            value={this.state.confirmPassword}\n            onChange={e => this.onChangeConfirmPassword(e)}\n            className=\"form__input\"\n            type=\"password\"\n            placeholder=\"Confirme Sua senha\" />\n          <p className=\"form-error\">{this.state.confirmPasswordError}</p>\n        </div>\n        <div className=\"form__action\">\n          <button type=\"button\" className=\"btn btn--facebook u-flex-grow\">Entrar com Facebook</button>\n          <button type=\"submit\" className=\"btn btn--primary\">\n            {this.renderBtnSubmit()}\n          </button>\n        </div>\n      </form>\n    )\n  }\n}\n","import axios from 'axios';\n\nconst login = ({ email, password }) => axios.post('login/email-and-password', { email, password })\n\nconst signup = ({ email, password, confirmPassword }) => axios.post('signup/email-and-password', { email, password, confirmPassword, name: confirmPassword })\n\nexport default {\n  login,\n  signup\n}","const hasResponseError = (error) => error && error.response && error.response.data && error.response.data.errors;\n\nconst getFirstResponseError = (error) => error.response.data.errors[0];\n\nexport default {\n  hasResponseError,\n  getFirstResponseError\n}","import AuthActions from './actions'\r\n\r\nimport authAPI from '../../api/auth-api'\r\nimport { setUserToken } from '../../../utils/LocalStorageManager';\r\nimport { redirectToWelcomePage } from '../../../utils/RouterRedirector';\r\nimport ServerErrorCatcher from '../../../utils/ServerErrorCatcher';\r\n\r\n\r\nexport default class AuthMiddleware {\r\n  static loginRequest({ email, password }) {\r\n    return dispatch => {\r\n      dispatch(AuthActions.loginRequest({ email, password }));\r\n      authAPI.login({ email, password })\r\n        .then(res => res.data)\r\n        .then(user => {\r\n          setUserToken(user.token);\r\n          redirectToWelcomePage();\r\n\r\n          dispatch(AuthActions.loginSuccess(user))\r\n          return user;\r\n        })\r\n        .catch(error => {\r\n          if (ServerErrorCatcher.hasResponseError(error)) {\r\n            dispatch(AuthActions.loginFailure(ServerErrorCatcher.getFirstResponseError(error)));\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  static signUp({ email, password, confirmPassword }) {\r\n    return dispatch => {\r\n      dispatch(AuthActions.signUpRequest({ email, password, confirmPassword }));\r\n      authAPI.signup({ email, password, confirmPassword })\r\n        .then(res => res.data)\r\n        .then(user => {\r\n          setUserToken(user.token);\r\n          redirectToWelcomePage();\r\n\r\n          dispatch(AuthActions.signUpSuccess(user))\r\n          return user;\r\n        })\r\n        .catch(error => {\r\n          if (ServerErrorCatcher.hasResponseError(error)) {\r\n            dispatch(AuthActions.signUpFailure(ServerErrorCatcher.getFirstResponseError(error)))\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nimport Footer from '../../components/layout/Footer/Footer';\nimport PublicHeader from '../../components/layout/PublicHeader/PublicHeader';\nimport SignupForm from '../../components/forms/SignupForm/SignupForm';\nimport AuthMiddleware from '../../store/stores/auth/middleware';\n\nclass SignupPage extends Component {\n\n  handleSignUp = ({ email, password, confirmPassword }) => {\n    this.props.signUp({ email, password, confirmPassword });\n  }\n\n  render() {\n    const authState = this.context.store.getState().auth;\n    return (\n      <div>\n        <PublicHeader>\n          <SignupForm\n            isSignigUp={authState.isSignigUp}\n            error={authState.error}\n            onSignup={this.handleSignUp} />\n        </PublicHeader>\n        <Footer />\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: ({ email, password, confirmPassword }) => dispatch(AuthMiddleware.signUp({ email, password, confirmPassword })),\n});\n\n\nSignupPage.contextTypes = {\n  store: PropTypes.object.isRequired\n}\n\nconst SignupPageContainer = connect(mapStateToProps, mapDispatchToProps)(SignupPage);\n\nexport default SignupPageContainer;\n","import React, { Component } from 'react';\nimport { validateEmail } from '../../../utils/EmailPatterValidation';\n\nexport default class LoginForm extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      emailError: '',\n      passwordError: '',\n    }\n  }\n\n  invalidEmailMsg = (validEmail) => validEmail\n    ? ''\n    : 'Por favor informe um email válido (Ex: meuemail@email.com)';\n\n  requiredEmailMsg = (inputValue) => (inputValue !== null)\n    ? null\n    : 'Por favor, informe seu email';\n\n  handleLogin = (e) => {\n    e.preventDefault();\n\n    if (!this.state.email) {\n      this.setState({\n        emailError: 'Por favor informe seu email'\n      });\n    }\n\n    if (!this.state.password) {\n      this.setState({\n        passwordError: 'Por favor informe sua senha'\n      });\n    }\n\n    if (!this.state.emailError && !this.state.passwordError) {\n      this.props.onLogin({\n        email: this.state.email,\n        password: this.state.password,\n        emailError: '',\n        passwordError: ''\n      });\n    }\n\n  }\n\n  onChangeEmail = (e) => {\n    const validEmail = validateEmail(e.target.value);\n\n    this.setState({\n      email: e.target.value,\n      emailError: this.invalidEmailMsg(validEmail)\n    });\n  }\n\n  onChangePassword = (e) => {\n    this.setState({\n      password: e.target.value,\n      passwordError: (e.target.value !== null) ? '' : 'Por favor informe um password'\n    });\n  }\n\n  renderBtnSubmit = () => (\n    (this.props.isSignigUp)\n      ? <span>Faznedo login...</span>\n      : <span>Entar</span>\n  );\n\n  render() {\n    return (\n      <form onSubmit={this.handleLogin} className=\"form__header\" noValidate>\n        <h2 className=\"form__header-title\">Sua primeira tarefa é preencher seus dados de acesso:</h2>\n        <div className=\"form__group form-error\">\n          {this.props.error}\n        </div>\n        <div className=\"form__group\">\n          <input\n            value={this.state.email}\n            onChange={e => this.onChangeEmail(e)}\n            className=\"form__input\"\n            type=\"email\"\n            placeholder=\"Digite seu emaill\" />\n          <p className=\"form-error\">{this.state.emailError}</p>\n        </div>\n        <div className=\"form__group\">\n          <input\n            value={this.state.password}\n            onChange={e => this.onChangePassword(e)}\n            className=\"form__input\"\n            type=\"password\"\n            placeholder=\"Digite sua senha\" />\n          <p className=\"form-error\">{this.state.passwordError}</p>\n        </div>\n        <div className=\"form__action\">\n          <button type=\"button\" className=\"btn btn--facebook u-flex-grow\">Entrar com Facebook</button>\n          <button type=\"submit\" className=\"btn btn--primary\">\n            {this.renderBtnSubmit()}\n          </button>\n        </div>\n        <div className=\"form__forgot-password-block\">Esqueci minha senha</div>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Footer from '../../components/layout/Footer/Footer';\nimport PublicHeader from '../../components/layout/PublicHeader/PublicHeader';\nimport LoginForm from '../../components/forms/LoginForm/LoginForm';\nimport AuthMiddleware from '../../store/stores/auth/middleware';\n\nclass LoginPage extends Component {\n\n  handleLogin = ({ email, password }) => {\n    this.props.login(email, password);\n  }\n\n  render() {\n    const authState = this.context.store.getState().auth;\n    return (\n      <div>\n        <PublicHeader>\n          <LoginForm\n            isSignigUp={authState.isSignigUp}\n            error={authState.error}\n            onLogin={this.handleLogin} />\n        </PublicHeader>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: (email, password) => dispatch(AuthMiddleware.loginRequest({ email, password })),\n});\n\nLoginPage.contextTypes = {\n  store: PropTypes.object.isRequired\n}\n\nconst LoginPageContainer = connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\n\nexport default LoginPageContainer;\n\n","import React, { Component } from 'react';\n\nimport './welcome-page.css';\n\nimport Footer from '../../components/layout/Footer/Footer';\n\nexport default class WelcomePage extends Component {\n\n  render() {\n    return (\n      <div className=\"welcome-page\">\n        <header className=\"welcome-page__header\">\n          <h2 className=\"welcome-page__header-title\">Talktive</h2>\n        </header>\n        <div className=\"welcome-page__main\">\n          <h2 className=\"welcome-page__main-title\">Seja Bem Vindo</h2>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Router, Route, browserHistory } from 'react-router';\nimport { Provider } from 'react-redux';\n\nimport './styles/App.css';\n\nimport { verifyAuthetication } from './utils/RouterRedirector';\n\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport WelcomePage from './pages/WelcomePage/WelcomePage';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Router history={browserHistory}>\n        <Route path=\"/\" component={SignupPage} />\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/pagina-inicial\" component={WelcomePage} onEnter={verifyAuthetication} />\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  store: PropTypes.object\n}\n\n\nexport default App;\n\n/*\nRequisitos:\n- Criar projeto no Git;\n- Fazer a tela de login/cadastro que está no zeplin;\n- Usar a api para enviar os dados de cadastrar/autenticação:\n     - Doc da api: https://api.dev.talkative.media/docs/\n     - Endpoints que tu vai usar:\n          - Login: https://api.dev.talkative.media/docs/#operation/login_email-and-password_create\n          - Cadastro: https://api.dev.talkative.media/docs/#operation/signup_email-and-password_create\n     - Exemplo de login: https://api.dev.talkative.media/v1/login/email-and-password/\n- Adaptar a tela pra mobile;\n- Contabilizar quanto tempo tu levou para fazer tudo isso.\n \nQuando tu pode me entregar?\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n\nimport './config/config-axios'\n\nimport './styles/abstracts/fonts.css';\nimport './styles/base/base.css';\nimport './styles/base/typography.css';\nimport './styles/components/form.css';\nimport './styles/components/img.css';\n\nimport store from './store/configureStore'\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/talktive.cff6bf5c.png\";"],"sourceRoot":""}